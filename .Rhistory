legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
par(mar=c(3,5,2,1), mgp=c(2,2,0), tck=-.01,las=1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
par(mar=c(3,5,2,1), mgp=c(2,0.5,0), tck=-.01,las=1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
par(mar=c(3,5,2,1), mgp=c(2,0.1,0), tck=-.01,las=1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
par(mar=c(3,5,2,1), mgp=c(4,1,0), tck=-.01,las=1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
par(mar=c(5,5,2,1), mgp=c(4,1,0), tck=-.01,las=1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
# mar = ... defines how many lines are in each of the plot margins
# mgp = ... determines which line the axes titles,
#           labels and lines are drawn
# tck = ... determines direction and length of axis tick marks
# lax = ... rotates the y-axis tick labels 90 degrees.
par(mar = c(5,5,2,1), mgp = c(4,1,0), tck = -.01, las = 1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# sample size
n <- 1
# true population mean
pop.mu <- 3.1
# true population standard deviation
pop.s <- 0.8
# generate our random numbers
x <- rnorm(n, pop.mu, pop.s)
# here im going to print our numbers to screen
# which is fine because we only have 10 of them,
# but if you had more you might want to plot them
# perhaps as a histogram or boxplot, or scatterplot.
print(x)
#hist(x)
# define a range of possible theta value either side of our data
theta <- seq(-10, 10, length = 500)
# parameters of the prior distribution of the mean...
# N.B. this is the mean and sd of the mean we are estimating,
# The sd is not the sd of the data!!!!
prior_theta_mu <- 2.3
prior_theta_s  <- 0.5
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# now calculate the likelihood of each of these theta values
# given our data by looping over our values of theta
# set up a vector in which to store our likelihoods
likelihood <- numeric(length(theta))
# loop over theta
for (i in 1:length(theta)) {
likelihood[i] <- sum(dnorm(x, mean = theta[i], sd = pop.s))
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# now specify our prior distribution as a normal distribution
# with defined mean and standard deviation
prior = dnorm(theta, mean = prior_theta_mu, sd = prior_theta_s)
# with these two pieces of information we can estimate our posterior
# or at least the proportional approximation to it.
posterior <- prior * likelihood
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
# mar = ... defines how many lines are in each of the plot margins
# mgp = ... determines which line the axes titles,
#           labels and lines are drawn
# tck = ... determines direction and length of axis tick marks
# lax = ... rotates the y-axis tick labels 90 degrees.
par(mar = c(5,5,2,1), mgp = c(4,1,0), tck = -.01, las = 1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
# mar = ... defines how many lines are in each of the plot margins
# mgp = ... determines which line the axes titles,
#           labels and lines are drawn
# tck = ... determines direction and length of axis tick marks
# lax = ... rotates the y-axis tick labels 90 degrees.
par(mar = c(5,5,2,1), mgp = c(4,1,0), tck = -.01, las = 1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
# mar = ... defines how many lines are in each of the plot margins
# mgp = ... determines which line the axes titles,
#           labels and lines are drawn
# tck = ... determines direction and length of axis tick marks
# lax = ... rotates the y-axis tick labels 90 degrees.
par(mar = c(5,5,2,1), mgp = c(4,1,0), tck = -.01, las = 1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
# mar = ... defines how many lines are in each of the plot margins
# mgp = ... determines which line the axes titles,
#           labels and lines are drawn
# tck = ... determines direction and length of axis tick marks
# lax = ... rotates the y-axis tick labels 90 degrees.
par(mar = c(5,5,2,1), mgp = c(4,1,0), tck = -.01, las = 1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
# mar = ... defines how many lines are in each of the plot margins
# mgp = ... determines which line the axes titles,
#           labels and lines are drawn
# tck = ... determines direction and length of axis tick marks
# lax = ... rotates the y-axis tick labels 90 degrees.
par(mar = c(5,5,2,1), mgp = c(4,1,0), tck = -.01, las = 1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# sample size
n <- 1
# true population mean
pop.mu <- 3.1
# true population standard deviation
pop.s <- 0.8
# generate our random numbers
x <- rnorm(n, pop.mu, pop.s)
# here im going to print our numbers to screen
# which is fine because we only have 10 of them,
# but if you had more you might want to plot them
# perhaps as a histogram or boxplot, or scatterplot.
print(x)
#hist(x)
# define a range of possible theta value either side of our data
theta <- seq(-10, 10, length = 500)
# parameters of the prior distribution of the mean...
# N.B. this is the mean and sd of the mean we are estimating,
# The sd is not the sd of the data!!!!
prior_theta_mu <- 2.3
prior_theta_s  <- 0.5
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# now calculate the likelihood of each of these theta values
# given our data by looping over our values of theta
# set up a vector in which to store our likelihoods
likelihood <- numeric(length(theta))
# loop over theta
for (i in 1:length(theta)) {
likelihood[i] <- sum(dnorm(x, mean = theta[i], sd = pop.s))
}
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# now specify our prior distribution as a normal distribution
# with defined mean and standard deviation
prior = dnorm(theta, mean = prior_theta_mu, sd = prior_theta_s)
# with these two pieces of information we can estimate our posterior
# or at least the proportional approximation to it.
posterior <- prior * likelihood
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
# mar = ... defines how many lines are in each of the plot margins
# mgp = ... determines which line the axes titles,
#           labels and lines are drawn
# tck = ... determines direction and length of axis tick marks
# lax = ... rotates the y-axis tick labels 90 degrees.
par(mar = c(5,5,2,1), mgp = c(4,1,0), tck = -.01, las = 1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
# Set some graphical parameters to tidy up the size of the margins
# and layout of the axes labels and axes ticks.
# mar = ... defines how many lines are in each of the plot margins
# mgp = ... determines which line the axes titles,
#           labels and lines are drawn
# tck = ... determines direction and length of axis tick marks
# lax = ... rotates the y-axis tick labels 90 degrees.
par(mar = c(5,5,2,1), mgp = c(4,1,0), tck = -.01, las = 1)
# plot the likelihood of the data, scaled by its sum which makes
# it a probability distribution.. Here i am scaling the
# y axis limit of the plot to be the max of the values
# we are plotting.
plot( (likelihood / sum(likelihood) ) ~ theta,
type = 'l',
ylab = 'Probability',
ylim = c(0, 1.1 * max(c(posterior/sum(posterior),
prior/sum(prior),
likelihood/sum(likelihood)))),
xlim = c(0, 7),
xlab = 'theta',
cex.axis = 1.2,
cex.lab = 1.2)
# add the prior distribution, similarly scaled, as a red line
lines( (prior / sum(prior)) ~ theta, col = 'red')
# add the posterior, similarly scaled, as a blue line
lines( (posterior / sum(posterior)) ~ theta, col = 'blue')
# add a figure legend
legend('topright',
legend = c('Likelihood','Prior','Posterior'),
col = c('black','red','blue'),
lty = 1)
# rescale the posterior so it is a true probability distrubution
# that sums to one.
true_post <- posterior/sum(posterior)
